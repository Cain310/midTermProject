<div class="row">
  <div class="col-8">
    <div id="googleMap" style="width:100%;height:400px;"></div>
    <div id="currentMap"><%= currentMap %></div>

    <script>
      var currentMap = JSON.parse($("#currentMap").text())
      console.log(currentMap);
      $(document).ready(function () {
        $('#submitForm').on('submit', () => {
          $('#Longitude').val(temp_marker.position.lng())
          $('#Latitude').val(temp_marker.position.lat())
        });
      })

      // create maps db on client
      // ajax request to populate maps object
      // change functions to take mapID
      // store viewedMapId

      // showMap(map)
      // addHandler to the map
      // create marker (post to backend) on response call addMarker

      // const maps = {};

      // function showMap(map) {
      //   maps[map.id] = new google.maps.Map(
      //     document.getElementById("googleMap"),
      //     {
      //       center: new google.maps.LatLng(map.lat, map.lng),
      //       zoom: map.zoom
      //     }
      //   );
      // }

      // function loadMaps(maps) {
      //   maps.forEach(map => maps[map.id] = map);
      // }

      var markersArray = [];
      var map;
      // var markers = [];
      var temp_marker = {};

      function initMap(lat, lng, zoom) {
        var mapProp = {
          center: new google.maps.LatLng(lat, lng),
          zoom: zoom
        };
        var map = new google.maps.Map(
          document.getElementById("googleMap"),
          mapProp
        );

        google.maps.event.addListener(map, 'click', function (event) {
          addMarker(event.latLng);

          let marker = new google.maps.Marker({
            position: { lat: event.latLng.lat(), lng: event.latLng.lng() },
            map: map,
            title: 'Click to zoom'
          });
          temp_marker = marker;

          markersArray.push(marker);
        });
        markers = JSON.parse(markers)
        if (markers) {
          // loop through markers
          for (let i = 0; i < markers.length; i++) {
            markers[i].coords.lat = parseFloat(markers[i].coords.lat)
            markers[i].coords.lng = parseFloat(markers[i].coords.lng)
            placeMarker(markers[i]);
          }
        }
      }
      //make function

      function placeMarker(pointObject) {
        let marker = new google.maps.Marker({
          position: pointObject.coords,
          map: map
        });

        if (pointObject.content) {
          var infoWindow = new google.maps.InfoWindow({
            content: pointObject.content
          });
          marker.addListener('click', function () {
            infoWindow.open(map, marker);
          });
        }
      }

      // Sets the map on all markers in the array.
      function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(map);
        }
      }

      // Removes the markers from the map, but keeps them in the array.
      function clearMarkers() {
        setMapOnAll(null);
      }

      // Shows any markers currently in the array.
      function showMarkers() {
        setMapOnAll(map);
      }

      // Deletes all markers in the array by removing references to them.
      function deleteMarkers() {
        clearMarkers();
        markers = [];
      }
      initMap(currentMap.lat, currentMap.lng, currentMap.zoom);

    </script>

    <form>
      <button type="Capture Map" method="POST" action="/maps/new"></button>
    </form>

    <% include ./sidebar %>

  </div>
</div>
