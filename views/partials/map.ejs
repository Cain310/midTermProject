<div id="main-section">
<div class="row">
  <div class="col-8">
    <div id="googleMap" style="width:100%;height:400px;"></div>
    <div style="visibility:hidden" id="currentMap"><%= currentMap %></div>
    <div style="visibility:hidden" id="currentPlaces"><%= JSON.stringify(currentPlaces) %></div>
    <form>
      <button type="Capture Map" method="POST" action="/maps/new" class="saveMap">HELLO</button>
    </form>
    <script>

    <div id="googleMap" style="width:100%;height:720px;"></div>

      <script>

      var currentMap = JSON.parse($("#currentMap").text())
      var currentPlaces = JSON.parse($("#currentPlaces").text())




      $(document).ready(function () {
        $('#submitForm').on('submit', () => {
          $('#Longitude').val(temp_marker.position.lng())
          $('#Latitude').val(temp_marker.position.lat())
        });
      })

      // create maps db on client
      // ajax request to populate maps object
      // change functions to take mapID
      // store viewedMapId

      // showMap(map)
      // addHandler to the map
      // create marker (post to backend) on response call addMarker

      // const maps = {};

      // function showMap(map) {
      //   maps[map.id] = new google.maps.Map(
      //     document.getElementById("googleMap"),
      //     {
      //       center: new google.maps.LatLng(map.lat, map.lng),
      //       zoom: map.zoom
      //     }
      //   );
      // }

      // function loadMaps(maps) {
      //   maps.forEach(map => maps[map.id] = map);
      // }

      var markersArray = [];
      var map;
      var mapid = 0;
      var currentMarker = {};

      function initMap(lat, lng, zoom) {
        var map = new google.maps.Map(
          document.getElementById("googleMap"), {
            center: { lat: 69.5, lng: 50 },
            zoom: zoom
          });
        console.log("mappp", map)

        google.maps.event.addListener(map, 'click', function (event) {
          console.log(event.latLng.lng())

          let marker = new google.maps.Marker({
            position: { lat: event.latLng.lat(), lng: event.latLng.lng() },
            map: map,
            title: 'Click to zoom'
          });
          currentMarker = marker;

          markersArray.push(marker);
        });



        if (currentPlaces) {
          // loop through currentPlaces
          for (let i = 0; i < currentPlaces.length; i++) {
            currentPlaces[i].lat = parseFloat(currentPlaces[i].lat)
            currentPlaces[i].lng = parseFloat(currentPlaces[i].lng)
            placeMarker(currentPlaces[i], map);
          }
        }
      }
      //add marker function
      function placeMarker(pointObject, map) {
        let marker = new google.maps.Marker({
          position: { lat: parseInt(pointObject.lat), lng: parseInt(pointObject.lng) },
          map: map
        });
        if (pointObject) {
          var infoWindow = new google.maps.InfoWindow({
            content: pointObject.description

          });
          marker.addListener('click', function () {
            infoWindow.open(map, marker);
          });
        }
      }
      // Sets the map on all markers in the array.
      function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(map);
        }
      }

      // Removes the markers from the map, but keeps them in the array.
      function clearMarkers() {
        setMapOnAll(null);
      }

      // Shows any markers currently in the array.
      function showMarkers() {
        setMapOnAll(map);
      }

      // Deletes all markers in the array by removing references to them.
      function deleteMarkers() {
        clearMarkers();
        markers = [];
      }
      initMap(currentMap.lat, currentMap.lng, currentMap.zoom);


    </script>


      initMap();

      </script>


</div>

    <% include ./sidebar %>

  </div>
  </div>
